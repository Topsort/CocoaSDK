//
// AuctionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuctionsAPI {

    /**
     Creates a new auction
     
     - parameter auctionRequest: (body) The information describing what will be auctioned. Topsort will run an auction for each slot type, for which products and/or vendors&#39; bids will compete against each other. The products and vendors that will participate are also included in the request.  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func createAuction(auctionRequest: AuctionRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Auction?, _ error: Error?) -> Void)) -> RequestTask {
        return createAuctionWithRequestBuilder(auctionRequest: auctionRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Creates a new auction
     - POST /auctions
     - BASIC:
       - type: http
       - name: BearerAuth
     - parameter auctionRequest: (body) The information describing what will be auctioned. Topsort will run an auction for each slot type, for which products and/or vendors&#39; bids will compete against each other. The products and vendors that will participate are also included in the request.  
     - returns: RequestBuilder<Auction> 
     */
    open class func createAuctionWithRequestBuilder(auctionRequest: AuctionRequest) -> RequestBuilder<Auction> {
        let localVariablePath = "/auctions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: auctionRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Auction>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
